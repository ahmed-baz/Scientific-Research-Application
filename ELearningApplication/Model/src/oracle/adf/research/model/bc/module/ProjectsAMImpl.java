package oracle.adf.research.model.bc.module;

import java.util.Random;

import oracle.adf.research.model.bc.module.common.ProjectsAM;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaManager;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 20 16:58:03 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProjectsAMImpl extends ApplicationModuleImpl implements ProjectsAM {
    /**
     * This is the default constructor (do not remove).
     */
    public ProjectsAMImpl() {
    }

    /**
     * Container's getter for Category1.
     * @return Category1
     */
    public ViewObjectImpl getCategory1() {
        return (ViewObjectImpl) findViewObject("Category1");
    }

    /**
     * Container's getter for Projects1.
     * @return Projects1
     */
    public ViewObjectImpl getProjects1() {
        return (ViewObjectImpl) findViewObject("Projects1");
    }

    /**
     * Container's getter for CategoryDropDown2.
     * @return CategoryDropDown2
     */
    public ViewObjectImpl getCategoryDropDown2() {
        return (ViewObjectImpl) findViewObject("CategoryDropDown2");
    }

    /**
     * Container's getter for Projects2.
     * @return Projects2
     */
    public ViewObjectImpl getProjects2() {
        return (ViewObjectImpl) findViewObject("Projects2");
    }

    /**
     * Container's getter for CategoryProjectsVuLink1.
     * @return CategoryProjectsVuLink1
     */
    public ViewLinkImpl getCategoryProjectsVuLink1() {
        return (ViewLinkImpl) findViewLink("CategoryProjectsVuLink1");
    }

    public boolean accessProject(String code) {
        boolean projectFound = false;
        ViewCriteria projectsVC = this.getProjects2().createViewCriteria();
        ViewCriteriaRow projectsVCR = projectsVC.createViewCriteriaRow();

        projectsVCR.setAttribute("Code", code);

        projectsVC.insertRow(projectsVCR);
        this.getProjects2().applyViewCriteria(projectsVC);

        this.getProjects2().executeQuery();
        if(this.getProjects2().getRowCount() > 0){
            projectFound = true;
        }else{
            projectFound = false;
        }
        return projectFound;
    }

    public String getRandomCode() {
        Random rnd = new Random();
        String allCode = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder code = new StringBuilder();
        while (code.length() < 6) { // length of the random string.
            int index = (int) (rnd.nextFloat() * allCode.length());
            code.append(allCode.charAt(index));
        }
        String codeStr = code.toString();
        return codeStr;
    }
    public void filterPrivateProjects(){
        ViewObject privateProjVO = this.getProjects2();
        ViewCriteriaManager vcm = privateProjVO.getViewCriteriaManager();
        ViewCriteria VC = vcm.getViewCriteria("PrivateProjectsCriteria");
        privateProjVO.applyViewCriteria(VC);
    }
    
    public void filterPublicProjects(){
        ViewObject publicProjVO = this.getProjects2();
        ViewCriteriaManager vcm = publicProjVO.getViewCriteriaManager();
        ViewCriteria VC = vcm.getViewCriteria("PublicProjrctsCriteria");
        publicProjVO.applyViewCriteria(VC);
    }

    public String getCode(){
        String randomCode = getRandomCode();
        while(accessProject(randomCode)){
            randomCode = getRandomCode();
            filterPrivateProjects();
            filterPublicProjects();
        }
        return randomCode;
    }
    
    /**
     * Container's getter for Projects3.
     * @return Projects3
     */
    public ViewObjectImpl getProjects3() {
        return (ViewObjectImpl) findViewObject("Projects3");
    }
}


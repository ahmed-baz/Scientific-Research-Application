package oracle.adf.research.model.bc.module;


import oracle.adf.research.model.bc.module.common.ProfessorsAM;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 11 19:10:33 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProfessorsAMImpl extends ApplicationModuleImpl implements ProfessorsAM {
    /**
     * This is the default constructor (do not remove).
     */
    public ProfessorsAMImpl() {
    }

    /**
     * Container's getter for Professors1.
     * @return Professors1
     */
    public ViewObjectImpl getMainProfessors() {
        return (ViewObjectImpl) findViewObject("MainProfessors");
    }

    /**
     * Container's getter for Users1.
     * @return Users1
     */
    public ViewObjectImpl getUsers1() {
        return (ViewObjectImpl) findViewObject("Users1");
    }

    /**
     * Container's getter for ContactData1.
     * @return ContactData1
     */
    public ViewObjectImpl getContactData1() {
        return (ViewObjectImpl) findViewObject("ContactData1");
    }


    /**
     * Container's getter for Cv1.
     * @return Cv1
     */
    public ViewObjectImpl getCv1() {
        return (ViewObjectImpl) findViewObject("Cv1");
    }

    /**
     * Container's getter for Cities1.
     * @return Cities1
     */
    public ViewObjectImpl getCities1() {
        return (ViewObjectImpl) findViewObject("Cities1");
    }

    /**
     * Container's getter for UserProfVuLink1.
     * @return UserProfVuLink1
     */
    public ViewLinkImpl getUserProfVuLink1() {
        return (ViewLinkImpl) findViewLink("UserProfVuLink1");
    }

    /**
     * Container's getter for ProfContactDataVuLink1.
     * @return ProfContactDataVuLink1
     */
    public ViewLinkImpl getProfContactDataVuLink1() {
        return (ViewLinkImpl) findViewLink("ProfContactDataVuLink1");
    }


    /**
     * Container's getter for ProfCVVuLink1.
     * @return ProfCVVuLink1
     */
    public ViewLinkImpl getProfCVVuLink1() {
        return (ViewLinkImpl) findViewLink("ProfCVVuLink1");
    }

    public void searchByName(String name) {
        ViewObject profVO = this.getMainProfessors();
        profVO.setWhereClause("upper(First_Name||' '||Last_Name) like upper('%" + name + "%')" +
                              " OR upper(email) like upper('%" + name + "%')");
        profVO.executeQuery();
    }

    /**
     * Container's getter for Professors2.
     * @return Professors2
     */
    public ViewObjectImpl getProfessorsApprovals() {
        return (ViewObjectImpl) findViewObject("ProfessorsApprovals");
    }


    /**
     * Container's getter for ContactData2.
     * @return ContactData2
     */
    public ViewObjectImpl getContactData2() {
        return (ViewObjectImpl) findViewObject("ContactData2");
    }

    /**
     * Container's getter for ProfContactDataVuLink2.
     * @return ProfContactDataVuLink2
     */
    public ViewLinkImpl getProfContactDataVuLink2() {
        return (ViewLinkImpl) findViewLink("ProfContactDataVuLink2");
    }

    /**
     * Container's getter for Cv2.
     * @return Cv2
     */
    public ViewObjectImpl getCv2() {
        return (ViewObjectImpl) findViewObject("Cv2");
    }

    /**
     * Container's getter for ProfCVVuLink2.
     * @return ProfCVVuLink2
     */
    public ViewLinkImpl getProfCVVuLink2() {
        return (ViewLinkImpl) findViewLink("ProfCVVuLink2");
    }


    /**
     * Container's getter for Users2.
     * @return Users2
     */
    public ViewObjectImpl getUsers2() {
        return (ViewObjectImpl) findViewObject("Users2");
    }

    /**
     * Container's getter for UserProfVuLink2.
     * @return UserProfVuLink2
     */
    public ViewLinkImpl getUserProfVuLink2() {
        return (ViewLinkImpl) findViewLink("UserProfVuLink2");
    }

    public String acceptProfessor(String email) {
        try {
            System.out.println("Accept Prof");
            String userFound = "N";
            ViewObject usersVO = this.getProfessorsApprovals().getViewObject();

            /// we need to check for user / pass using View Criteria

            ViewCriteria usersVC = usersVO.createViewCriteria();
            ViewCriteriaRow ADFUsersVCR = usersVC.createViewCriteriaRow();

            ADFUsersVCR.setAttribute("Email", email);
            usersVC.insertRow(ADFUsersVCR);
            usersVO.applyViewCriteria(usersVC);
            usersVO.executeQuery();
            if (usersVO.getRowCount() > 0) {

                Row usersRow = usersVO.next();
                usersRow.setAttribute("Active", "Y");
                usersRow.setAttribute("RoleId", 2);
                this.getDBTransaction().commit();
                userFound = "Y";
            } else {
                userFound = "N";
            }
            ViewObject users = this.getProfessorsApprovals();
            ViewCriteria usersVC1 = users.createViewCriteria();
            ViewCriteriaRow ADFUsersVCR1 = usersVC1.createViewCriteriaRow();
            ADFUsersVCR1.setAttribute("Active", "N");
            usersVC1.insertRow(ADFUsersVCR1);
            users.applyViewCriteria(usersVC1);
            users.executeQuery();
            ViewObject mainProf = this.getMainProfessors().getViewObject();
            ViewCriteria usersVC12 = mainProf.createViewCriteria();
            ViewCriteriaRow ADFUsersVCR12 = usersVC12.createViewCriteriaRow();
            ADFUsersVCR12.setAttribute("Active", "Y");
            ADFUsersVCR12.setAttribute("RoleId", 2);
            usersVC12.insertRow(ADFUsersVCR12);
            mainProf.applyViewCriteria(usersVC12);
            mainProf.executeQuery();
            return userFound;
        } catch (Exception e) {
            System.out.println("" + e);
            return "N";
        }

    }

    public void filterApprovals() {
        ViewObject usersVO = this.getProfessorsApprovals().getViewObject();
        ViewCriteria usersVC = usersVO.createViewCriteria();
        ViewCriteriaRow ADFUsersVCR = usersVC.createViewCriteriaRow();
        ADFUsersVCR.setAttribute("Active", "N");
        usersVC.insertRow(ADFUsersVCR);
        usersVO.applyViewCriteria(usersVC);
        usersVO.executeQuery();

    }

    /**
     * Container's getter for Awards3.
     * @return Awards3
     */
    public ViewObjectImpl getAwards1() {
        return (ViewObjectImpl) findViewObject("Awards1");
    }

    /**
     * Container's getter for ProfessrorAwardVuLink1.
     * @return ProfessrorAwardVuLink1
     */
    public ViewLinkImpl getProfessrorAwardVuLink1() {
        return (ViewLinkImpl) findViewLink("ProfessrorAwardVuLink1");
    }

    /**
     * Container's getter for Qualifiactions3.
     * @return Qualifiactions3
     */
    public ViewObjectImpl getQualifiactions1() {
        return (ViewObjectImpl) findViewObject("Qualifiactions1");
    }

    /**
     * Container's getter for PeofessorQualVuLink1.
     * @return PeofessorQualVuLink1
     */
    public ViewLinkImpl getPeofessorQualVuLink1() {
        return (ViewLinkImpl) findViewLink("PeofessorQualVuLink1");
    }

    /**
     * Container's getter for Qualifiactions3.
     * @return Qualifiactions3
     */
    public ViewObjectImpl getQualifiactions2() {
        return (ViewObjectImpl) findViewObject("Qualifiactions2");
    }

    /**
     * Container's getter for PeofessorQualVuLink2.
     * @return PeofessorQualVuLink2
     */
    public ViewLinkImpl getPeofessorQualVuLink2() {
        return (ViewLinkImpl) findViewLink("PeofessorQualVuLink2");
    }

    /**
     * Container's getter for Awards2.
     * @return Awards2
     */
    public ViewObjectImpl getAwards2() {
        return (ViewObjectImpl) findViewObject("Awards2");
    }

    /**
     * Container's getter for ProfessrorAwardVuLink2.
     * @return ProfessrorAwardVuLink2
     */
    public ViewLinkImpl getProfessrorAwardVuLink2() {
        return (ViewLinkImpl) findViewLink("ProfessrorAwardVuLink2");
    }
}


package oracle.adf.research.model.bc.entity;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 15 22:11:44 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CvEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CvId,
        CvFile,
        Notes,
        FilePath,
        Professors;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CVID = AttributesEnum.CvId.index();
    public static final int CVFILE = AttributesEnum.CvFile.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int FILEPATH = AttributesEnum.FilePath.index();
    public static final int PROFESSORS = AttributesEnum.Professors.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CvEOImpl() {
    }

    /**
     * Gets the attribute value for CvId, using the alias name CvId.
     * @return the value of CvId
     */
    public Number getCvId() {
        return (Number) getAttributeInternal(CVID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CvId.
     * @param value value to set the CvId
     */
    public void setCvId(Number value) {
        setAttributeInternal(CVID, value);
    }

    /**
     * Gets the attribute value for CvFile, using the alias name CvFile.
     * @return the value of CvFile
     */
    public BlobDomain getCvFile() {
        return (BlobDomain) getAttributeInternal(CVFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CvFile.
     * @param value value to set the CvFile
     */
    public void setCvFile(BlobDomain value) {
        setAttributeInternal(CVFILE, value);
    }

    /**
     * Gets the attribute value for Notes, using the alias name Notes.
     * @return the value of Notes
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notes.
     * @param value value to set the Notes
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for FilePath, using the alias name FilePath.
     * @return the value of FilePath
     */
    public String getFilePath() {
        return (String) getAttributeInternal(FILEPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for FilePath.
     * @param value value to set the FilePath
     */
    public void setFilePath(String value) {
        setAttributeInternal(FILEPATH, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getProfessors() {
        return (RowIterator) getAttributeInternal(PROFESSORS);
    }

    /**
     * @param cvId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number cvId) {
        return new Key(new Object[] { cvId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.adf.research.model.bc.entity.CvEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("CV_SEQ",this.getDBTransaction());
        Number n = seq.getSequenceNumber();
        this.setCvId(n);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}


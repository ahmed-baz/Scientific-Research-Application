package oracle.adf.research.model.bc.module;

import java.util.Random;

import oracle.adf.research.model.bc.module.common.LibraryAM;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 23 15:14:46 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LibraryAMImpl extends ApplicationModuleImpl implements LibraryAM {
    /**
     * This is the default constructor (do not remove).
     */
    public LibraryAMImpl() {
    }

    /**
     * Container's getter for Books.
     * @return Books
     */
    public ViewObjectImpl getBooks() {
        return (ViewObjectImpl) findViewObject("Books");
    }

    /**
     * Container's getter for Category.
     * @return Category
     */
    public ViewObjectImpl getCategory() {
        return (ViewObjectImpl) findViewObject("Category");
    }

    /**
     * Container's getter for PublicBook.
     * @return PublicBook
     */
    public ViewObjectImpl getPublicBooks() {
        return (ViewObjectImpl) findViewObject("PublicBooks");
    }

    /**
     * Container's getter for CategoryDropDownList.
     * @return CategoryDropDownList
     */
    public ViewObjectImpl getCategoryDropDownList() {
        return (ViewObjectImpl) findViewObject("CategoryDropDownList");
    }

    /**
     * Container's getter for PrivateBooks.
     * @return PrivateBooks
     */
    public ViewObjectImpl getPrivateBooks() {
        return (ViewObjectImpl) findViewObject("PrivateBooks");
    }

    /**
     * Container's getter for CategotyBooksVuLink1.
     * @return CategotyBooksVuLink1
     */
    public ViewLinkImpl getCategoryBooksVuLink1() {
        return (ViewLinkImpl) findViewLink("CategoryBooksVuLink1");
    }

    public Boolean checkBookCode(String code) {
        boolean isFound = false;
        if (code.length() == 6) {
            ViewObject booksVO = this.getPrivateBooks();
            ViewCriteria booksVC = booksVO.createViewCriteria();
            ViewCriteriaRow booksVCR = booksVC.createViewCriteriaRow();
            booksVCR.setAttribute("Code", code);
            booksVCR.setAttribute("Status", "Private");
            booksVC.insertRow(booksVCR);
            booksVO.applyViewCriteria(booksVC);
            booksVO.executeQuery();
            System.out.println("Query Executed");
            System.out.println("Rows : " + booksVO.getRowCount());
            if (booksVO.getRowCount() > 0) {
                System.out.println("Found");
                isFound = true;
            } else {
                System.out.println("Not Found");
            }
        }
        return isFound;
    }

    public String bookCode() {
        boolean isFound = true;
        String uniqueCode = null;
        String code = getRandomCode();
        ViewObject booksVO = this.getPrivateBooks();
        ViewCriteria booksVC = booksVO.createViewCriteria();
        ViewCriteriaRow booksVCR = booksVC.createViewCriteriaRow();
        while (isFound == true) {
            code = getRandomCode();
            booksVCR.setAttribute("Code", code);
            booksVCR.setAttribute("Status", "private");
            booksVC.insertRow(booksVCR);
            booksVO.applyViewCriteria(booksVC);
            booksVO.executeQuery();
            System.out.println("Query Executed");
            if (booksVO.getRowCount() == 0) {
                System.out.println("Not Found");
                isFound = false;
                uniqueCode = code;
            } else {
                System.out.println(" Found in if statment");
            }
        }
        System.out.println("Uniqu Code is : " + uniqueCode);
        return uniqueCode;
    }

    public String getRandomCode() {
        Random rnd = new Random();
        String allCode = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder code = new StringBuilder();
        while (code.length() < 6) { // length of the random string.
            int index = (int) (rnd.nextFloat() * allCode.length());
            code.append(allCode.charAt(index));
        }
        String codeStr = code.toString();
        return codeStr;
    }

    public void defaultBooks() {
        ViewObjectImpl publicBooksVO = getPublicBooks();
        ViewCriteria publicBooksVC = publicBooksVO.getViewCriteria("PublicBookVOCriteria");
        publicBooksVO.applyViewCriteria(publicBooksVC);
        publicBooksVO.executeQuery();

        ViewObjectImpl privateBooksVO = getPrivateBooks();
        ViewCriteria privateBooksVC = privateBooksVO.getViewCriteria("PrivateBookVOCriteria");
        privateBooksVO.applyViewCriteria(privateBooksVC);
        privateBooksVO.executeQuery();
    }

}

